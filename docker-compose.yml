# Docker Compose file used for deployment (should be called docker-compose.yml, as this is used by AWS directly)

services:
  # Frontend service
  frontend:
    # Use the image from the Docker Hub
    image: poetoecuva/rac-frontend:latest
    # Define ports: "HOST_PORT:CONTAINER_PORT": https://docs.docker.com/get-started/docker-concepts/running-containers/publishing-ports/
    ports:
      # This forwards any traffic send through port 80 (main port on AWS EB instace) to container port 3000 (frontend container)
      - "80:3000"
    # Depends on backend to run first
    depends_on:
      - backend
    networks:
      - fe_be
    # Add environment variables to authenticate to Docker Hub (corresponding variables are added in GitHub Actions)
    environment:
      - DOCKER_USERNAME=${DOCKER_USERNAME}
      - DOCKER_PASSWORD=${DOCKER_ACCESS_TOKEN}

  # Backend service
  backend:
    image: poetoecuva/rac-backend:latest
    ports:
      - "4001:4001"
    # Load a .env file with the container for the backend
    env_file:
      # Use .env file from the root of the project
      - .env
    networks:
      - fe_be
    # Add environment variables to authenticate to Docker Hub (corresponding variables are added in GitHub Actions)
    environment:
      - DOCKER_USERNAME=${DOCKER_USERNAME}
      - DOCKER_PASSWORD=${DOCKER_ACCESS_TOKEN}

# Define networks (In Docker Compose, a network allows containers to communicate with each other 
# without exposing their ports to the host machine. It creates an isolated environment where services 
# can interact using container names instead of IP addresses.)
networks:
  # Define network for frontend and backend: https://docs.docker.com/reference/compose-file/networks/
  fe_be:
    # Use bridge driver to communicate with other containers on the same host: https://docs.docker.com/engine/network/drivers/
    driver: bridge
