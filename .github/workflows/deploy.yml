name: Deploy Frontend & Backend to AWS Elastic Beanstalk

on:
    push:
      branches:
        - main
    pull_request:
      branches:
        - main

jobs:
  # Job to deploy backend
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    # Use the main environment from GitHub to load environment variables
    environment: main
    # These permissions are needed to interact with GitHub's OIDC Token endpoint for AWS Credentials step
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
      # Continute on error to verify account worked, if not, credentials are probably wrong
      continue-on-error: true
    # This step will print the account used, if it is not configured correctly, it will not show an account,
    # meaning the credentials are probably invalid
    - name: Verify AWS Credentials
      run: |
        aws sts get-caller-identity
    
    # TODO: from here not tested yet, change a bit to deploy the backend
    
    # https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html
    # apt was not possible, as previously it failed with awscli not present in packages
    # Install or update AWS CLI
    - name: Install or Update AWS CLI
      # First get the path where aws is installed, if empty, it is not installed
      # Depending on this result, install or update it and print the aws version at the end to verify installation
      run: |
        echo "Searching for installed aws location (if any)"
        AWS_PATH=$(which aws)

        echo "Download awscli files..."
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip

        if [ -n "$AWS_PATH" ]; then
          echo "AWS CLI is already installed at $AWS_PATH"
          INSTALL_DIR=$(ls -l "$AWS_PATH" | awk '{print $NF}' | sed 's|/aws$||')

          echo "Updating AWS CLI at $INSTALL_DIR"
          sudo ./aws/install --bin-dir "$AWS_PATH" --install-dir "$INSTALL_DIR" --update
        else
          echo "AWS CLI is not installed. Installing..."
          sudo ./aws/install
        fi

        aws --version
    
    # Create a zip of the application, excluding not necessary files, such as .gitignore and node_modules
    # This command now only adds the Dockerrun.aws.json and .ebextensions files to avoid unnecessary files
    - name: Package Backend Application
      run: |
        cd backend
        zip -r ../backend.zip Dockerrun.aws.json .ebextensions

    - name: Upload Backend to S3
      run: |
        aws s3 cp backend.zip s3://${{ secrets.S3_BUCKET }}/backend.zip

    - name: Deploy Backend to AWS Elastic Beanstalk
      run: |
        aws elasticbeanstalk create-application-version --application-name BackendApp \
          --version-label "backend-${{ github.run_number }}" \
          --source-bundle S3Bucket="${{ secrets.S3_BUCKET }}",S3Key="backend.zip"

        aws elasticbeanstalk update-environment --environment-name ${{ secrets.BACKEND_ENV_NAME }} \
          --version-label "backend-${{ github.run_number }}"

# deploy-frontend:
#   name: Deploy Frontend
#   runs-on: ubuntu-latest
#   needs: deploy-backend  # Ensures backend deploys first

#   steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v4

#     - name: Install AWS CLI
#       run: |
#         sudo apt-get update
#         sudo apt-get install -y awscli zip

#     - name: Update Frontend Backend URL
#       run: |
#         sed -i "s|REACT_APP_BACKEND_URL=.*|REACT_APP_BACKEND_URL=https://${{ secrets.BACKEND_ENV_NAME }}.elasticbeanstalk.com|" frontend/.env.production

#     - name: Package Frontend Application
#       run: |
#         cd frontend
#         zip -r ../frontend-deploy.zip Dockerrun.aws.json .ebextensions

#     - name: Upload Frontend to S3
#       run: |
#         aws s3 cp frontend-deploy.zip s3://${{ secrets.S3_BUCKET }}/frontend-deploy.zip

#     - name: Deploy Frontend to AWS Elastic Beanstalk
#       run: |
#         aws elasticbeanstalk create-application-version --application-name FrontendApp \
#           --version-label "frontend-${{ github.run_number }}" \
#           --source-bundle S3Bucket="${{ secrets.S3_BUCKET }}",S3Key="frontend-deploy.zip"

#         aws elasticbeanstalk update-environment --environment-name ${{ secrets.FRONTEND_ENV_NAME }} \
#           --version-label "frontend-${{ github.run_number }}"
