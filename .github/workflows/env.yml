name: Setup Environment Variables

# Specify this workflow can be called by another workflow using workflow_call: https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#workflow_call
on:
  workflow_call:

jobs:
  # Step 1: Test GitHub Repository Environment Variables (can show that the variables are not set, just a few is enough)
  env-test:
    runs-on: ubuntu-latest
    # Use the main environment from GitHub to load environment variables
    environment: main
    steps:
      - name: Test Environment Variables
        run: |
          echo "API name: ${{ vars.API_NAME }}"
          echo "API version: ${{ vars.API_VERSION }}"
          echo "AWS Region: ${{ vars.AWS_REGION }}"
  
  # Add credentials in environment variables so other jobs can use them (otherwise they will fail with errors like "You must specify a region")
      - name: Add Environment Variables for Workflows
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
        # Continute on error to verify account worked, if not, credentials are probably wrong
        continue-on-error: true
      # This step will print the account used, if it is not configured correctly, it will not show an account,
      # meaning the credentials are probably invalid
      - name: Verify AWS Credentials
        run: |
          aws sts get-caller-identity

  # Step 2: Set additional environment variables, such as the deployed application URL of the AWS EB environment
  env-setup:
    runs-on: ubuntu-latest
    # Use the main environment from GitHub to load environment variables
    environment: main
    steps:
    # Step to get the environment url of the AWS EB environment (=public URL used) and save it for later jobs/steps
    - name: Get Deployed Application Environment URL
      run: |
        PUBLIC_APP_URL=$(aws elasticbeanstalk describe-environments \
          --application-name "${{ vars.EB_APP_NAME }}" \
          --environment-names "${{ vars.EB_ENV_NAME }}" \
          --query "Environments[0].CNAME" \
          --output text)

        echo "Public App URL: http://$PUBLIC_APP_URL"
        echo "DEPLOYED_BACKEND_URL=$PUBLIC_APP_URL:${{ vars.API_PORT }}" >> $GITHUB_ENV  
        echo "Backend URL: $DEPLOYED_BACKEND_URL"



