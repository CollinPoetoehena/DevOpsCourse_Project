name: Setup Environment Variables

# Specify this workflow can be called by another workflow using workflow_call: https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#workflow_call
on:
  workflow_call:

jobs:
  # Step 1: Test GitHub Repository Environment Variables (can show that the variables are not set, just a few is enough)
  env-test:
    runs-on: ubuntu-latest
    # Use the main environment from GitHub to load environment variables
    environment: main
    steps:
    # Step to test environment variables (can reveal if some are set or not for example, some is enough)
    - name: Test Environment Variables
      run: |
        echo "API name: ${{ vars.API_NAME }}"
        echo "API version: ${{ vars.API_VERSION }}"
        echo "AWS Region: ${{ vars.AWS_REGION }}"

    # Step to set environment variables that can be used in the workflows
    - name: Set Environment Variables for Workflows
      run: |
        echo "BE_IMAGE_NAME=rac-backend" >> $GITHUB_ENV
        echo "FE_IMAGE_NAME=rac-frontend" >> $GITHUB_ENV
        echo "DOCKER_REGISTRY=docker.io/poetoecuva" >> $GITHUB_ENV
        echo "APP_NAME=rac-app" >> $GITHUB_ENV
        # Application name and version. Use Git commit id to create unique uploads and link back to commits
        echo "APP_NAME_VERSION=$APP_NAME-${{ github.sha }}" >> $GITHUB_ENV
  # TODO: find something else for version, since github.sha is not really a good one.